version: '3.8'

services:
  # Message Broker
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_DEFAULT_USER: admin
      RABBITMQ_DEFAULT_PASS: admin

  # Databases
  auth-db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: auth_db
    volumes:
      - auth_db_data:/var/lib/mysql

  catalog-db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: catalog_db
    volumes:
      - catalog_db_data:/var/lib/mysql

  order-db:
    image: mysql:8
    environment:
      MYSQL_ROOT_PASSWORD: rootpass
      MYSQL_DATABASE: order_db
    volumes:
      - order_db_data:/var/lib/mysql

  # Microservices
  auth-service:
    build: ./microservices/auth-service
    ports:
      - "5001:5000"
    environment:
      DB_HOST: auth-db
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - auth-db
      - rabbitmq

  catalog-service:
    build: ./microservices/catalog-service
    ports:
      - "5002:5000"
    environment:
      DB_HOST: catalog-db
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - catalog-db
      - rabbitmq

  order-service:
    build: ./microservices/order-service
    ports:
      - "5003:5000"
    environment:
      DB_HOST: order-db
      RABBITMQ_HOST: rabbitmq
    depends_on:
      - order-db
      - rabbitmq

  api-gateway:
    build: ./api-gateway
    ports:
      - "5000:5000"
    environment:
      AUTH_SERVICE_URL: http://auth-service:5000
      CATALOG_SERVICE_URL: http://catalog-service:5000
      ORDER_SERVICE_URL: http://order-service:5000
      JWT_SECRET: ${JWT_SECRET}
    depends_on:
      - auth-service
      - catalog-service
      - order-service

  client:
    build: ./client
    ports:
      - "8080:8080"
    depends_on:
      - api-gateway

volumes:
  auth_db_data:
  catalog_db_data:
  order_db_data: